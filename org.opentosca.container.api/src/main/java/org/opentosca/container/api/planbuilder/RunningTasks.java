/**
 *
 */
package org.opentosca.container.api.planbuilder;

import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

import org.opentosca.container.api.planbuilder.model.PlanGenerationState;

/**
 * Copyright 2015 IAAS University of Stuttgart <br>
 * <br>
 *
 * <p>
 * Simple implementation for storing the tasks generated by the PlanBuilder service
 * </p>
 *
 * @author Kalman Kepes - kepeskn@studi.informatik.uni-stuttgart.de
 *
 */
public class RunningTasks {

    private static final Map<String, PlanGenerationState> tasks = new ConcurrentHashMap<>();

    private static String generateId() {
        final String newId = String.valueOf(System.currentTimeMillis());
        if (RunningTasks.tasks.containsKey(newId)) {
            return RunningTasks.generateId();
        } else {
            return newId;
        }
    }

    public static String putSafe(PlanGenerationState generationState) {
        synchronized (tasks) {
            final String id = generateId();
            tasks.put(id, generationState);
            return id;
        }
    }

    public static PlanGenerationState get(String id) {
        return tasks.get(id);
    }

    public static boolean exists(String id) {
        return tasks.containsKey(id);
    }
}
